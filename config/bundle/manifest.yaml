---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: konfigurations.jsonnet.io
spec:
  group: jsonnet.io
  names:
    kind: Konfiguration
    listKind: KonfigurationList
    plural: konfigurations
    shortNames:
    - konfig
    - konfigs
    - konf
    - konfs
    singular: konfiguration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.lastAppliedRevision
      name: CurrentRevision
      priority: 1
      type: string
    - jsonPath: .status.snapshot.checksum
      name: Checksum
      priority: 1
      type: string
    - jsonPath: .status.lastAttemptedRevision
      name: LastAttemptedRevision
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Konfiguration is the Schema for the konfigurations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KonfigurationSpec defines the desired state of a Konfiguration
            properties:
              dependsOn:
                description: DependsOn may contain a dependency.CrossNamespaceDependencyReference
                  slice with references to Konfiguration resources that must be ready
                  before this Konfiguration can be reconciled.
                items:
                  description: CrossNamespaceDependencyReference holds the reference
                    to a dependency.
                  properties:
                    name:
                      description: Name holds the name reference of a dependency.
                      type: string
                    namespace:
                      description: Namespace holds the namespace reference of a dependency.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              force:
                default: false
                description: Force instructs the controller to recreate resources
                  when patching fails due to an immutable field change.
                type: boolean
              healthChecks:
                description: A list of resources to be included in the health assessment.
                items:
                  description: NamespacedObjectKindReference contains enough information
                    to let you locate the typed referenced object in any namespace
                  properties:
                    apiVersion:
                      description: API version of the referent, if not specified the
                        Kubernetes preferred version will be used
                      type: string
                    kind:
                      description: Kind of the referent
                      type: string
                    name:
                      description: Name of the referent
                      type: string
                    namespace:
                      description: Namespace of the referent, when not specified it
                        acts as LocalObjectReference
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
              inject:
                description: Inject raw jsonnet into the evaluation.
                type: string
              interval:
                description: The interval at which to reconcile the Konfiguration.
                type: string
              jsonnetPaths:
                description: Additional search paths to add to the jsonnet importer.
                  These are relative to the root of the sourceRef.
                items:
                  type: string
                type: array
              jsonnetURLs:
                description: Additional HTTP(S) URLs to add to the jsonnet importer.
                items:
                  type: string
                type: array
              kubeConfig:
                description: The KubeConfig for reconciling the Konfiguration on a
                  remote cluster. Defaults to the in-cluster configuration.
                properties:
                  secretRef:
                    description: SecretRef holds the name to a secret that contains
                      a 'value' key with the kubeconfig file as the value. It must
                      be in the same namespace as the Konfiguration. It is recommended
                      that the kubeconfig is self-contained, and the secret is regularly
                      updated if credentials such as a cloud-access-token expire.
                      Cloud specific `cmd-path` auth helpers will not function without
                      adding binaries and credentials to the Pod that is responsible
                      for reconciling the Konfiguration.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                type: object
              path:
                description: Path to the jsonnet, json, or yaml that should be applied
                  to the cluster. Defaults to 'None', which translates to the root
                  path of the SourceRef. When declared as a file path it is assumed
                  to be from the root path of the SourceRef. You may also define a
                  HTTP(S) link to fetch files from a remote location.
                type: string
              prune:
                description: Prune enables garbage collection. This means that when
                  newly rendered jsonnet does not contain objects that were applied
                  previously, they will be removed. When a Konfiguration is removed
                  that had this value set to `true`, all resources created by it will
                  also be removed.
                type: boolean
              retryInterval:
                description: The interval at which to retry a previously failed reconciliation.
                  When not specified, the controller uses the KonfigurationSpec.Interval
                  value to retry failures.
                type: string
              serviceAccountName:
                description: The name of the Kubernetes service account to impersonate
                  when reconciling this Konfiguration.
                type: string
              sourceRef:
                description: Reference of the source where the jsonnet, json, or yaml
                  file(s) are.
                properties:
                  apiVersion:
                    description: API version of the referent, if not specified the
                      Kubernetes preferred version will be used
                    type: string
                  kind:
                    description: Kind of the referent
                    type: string
                  name:
                    description: Name of the referent
                    type: string
                  namespace:
                    description: Namespace of the referent, when not specified it
                      acts as LocalObjectReference
                    type: string
                required:
                - kind
                - name
                type: object
              suspend:
                description: This flag tells the controller to suspend subsequent
                  reconciliations, it does not apply to already started executions.
                  Defaults to false.
                type: boolean
              timeout:
                description: Timeout for diff, validation, apply, and health checking
                  operations. Defaults to 'Interval' duration.
                type: string
              validate:
                default: true
                description: Validate input against the server schema, defaults to
                  true. At the moment this just implies a dry-run before patch/create
                  operations. This will be updated to support different methods of
                  validation.
                type: boolean
              variables:
                description: External variables and top-level arguments to supply
                  to the jsonnet at `path`.
                properties:
                  extCode:
                    additionalProperties:
                      type: string
                    description: Values of external variables with values supplied
                      as Jsonnet code.
                    type: object
                  extStr:
                    additionalProperties:
                      type: string
                    description: Values of external variables with string values.
                    type: object
                  tlaCode:
                    additionalProperties:
                      type: string
                    description: Values of top level arguments with values supplied
                      as Jsonnet code.
                    type: object
                  tlaStr:
                    additionalProperties:
                      type: string
                    description: Values of top level arguments with string values.
                    type: object
                type: object
            required:
            - interval
            - path
            - prune
            type: object
          status:
            description: KonfigurationStatus defines the observed state of Konfiguration
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastAppliedRevision:
                description: The last successfully applied revision. The revision
                  format for Git sources is <branch|tag>/<commit-sha>. For HTTP(S)
                  paths it will just be the URL.
                type: string
              lastAttemptedRevision:
                description: LastAttemptedRevision is the revision of the last reconciliation
                  attempt. For HTTP(S) paths it will just be the URL.
                type: string
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
              snapshot:
                description: The last successfully applied revision metadata.
                properties:
                  checksum:
                    description: The manifests sha1 checksum.
                    type: string
                  entries:
                    description: A list of Kubernetes kinds grouped by namespace.
                    items:
                      description: SnapshotEntry holds the metadata of namespaced
                        Kubernetes objects
                      properties:
                        kinds:
                          additionalProperties:
                            type: string
                          description: The list of Kubernetes kinds.
                          type: object
                        namespace:
                          description: The namespace of this entry.
                          type: string
                      required:
                      - kinds
                      type: object
                    type: array
                required:
                - checksum
                - entries
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: jsonnet-controller
    control_plane: manager
  name: jsonnet-controller
  namespace: flux-system
spec:
  minReadySeconds: 30
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: jsonnet-controller
      control_plane: manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      labels:
        app: jsonnet-controller
        control_plane: manager
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/pelotech/jsonnet-controller:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: http
        - containerPort: 8080
          name: metrics
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        stdin: false
        tty: false
        volumeMounts:
        - mountPath: /cache
          name: manager-cache
        - mountPath: /tmp
          name: manager-tmp
      imagePullSecrets: []
      initContainers: []
      securityContext:
        runAsNonRoot: true
      serviceAccountName: jsonnet-controller-sa
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: manager-cache
      - emptyDir: {}
        name: manager-tmp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  labels:
    app: jsonnet-controller
    control_plane: manager
  name: jsonnet-controller-manager-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jsonnet-controller-manager-role
subjects:
- kind: ServiceAccount
  name: jsonnet-controller-sa
  namespace: flux-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  labels:
    app: jsonnet-controller
    control_plane: manager
  name: jsonnet-controller-manager-role
rules:
- apiGroups:
  - jsonnet.io
  resources:
  - konfigurations
  - konfigurations/finalizers
  - konfigurations/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - buckets/status
  - gitrepositories/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations: {}
  labels:
    app: jsonnet-controller
    control_plane: manager
  name: jsonnet-controller-sa
  namespace: flux-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  labels:
    app: jsonnet-controller
    control_plane: manager
  name: jsonnet-controller-cluster-admin-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: jsonnet-controller-sa
  namespace: flux-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  labels:
    app: jsonnet-controller
    control_plane: manager
  name: jsonnet-controller-leader-election-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  labels:
    app: jsonnet-controller
    control_plane: manager
  name: jsonnet-controller-leader-election-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jsonnet-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: jsonnet-controller-sa
  namespace: flux-system
---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    app: jsonnet-controller
    control_plane: manager
  name: jsonnet-controller
  namespace: flux-system
spec:
  ports:
  - name: http
    port: 9443
    targetPort: 9443
  - name: metrics
    port: 8080
    targetPort: 8080
  selector:
    app: jsonnet-controller
    control_plane: manager
  type: ClusterIP
